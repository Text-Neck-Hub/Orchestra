# default.conf 파일 수정본 (HTTPS 적용!)

# 80번 포트 (HTTP) 설정 - HTTPS로 리다이렉트 추가!
server {
    listen 80;
    server_name www.textneckhub.p-e.kr textneckhub.p-e.kr; # www 없는 도메인도 추가!

    # ✨ HTTP로 들어온 요청을 HTTPS로 자동으로 리다이렉트! ✨
    # 이렇게 하면 사용자가 http:// 로 접속해도 자동으로 https:// 로 연결돼서 편리해!
    return 301 https://$host$request_uri;

    # Certbot 인증을 위한 경로 (이건 그대로 두거나 추가해줘)
    # 리다이렉트 규칙보다 위에 있어야 Certbot이 접근할 수 있어!
    location ~ /.well-known/acme-challenge/ {
        allow all;
        root /var/www/certbot; # Certbot 웹루트 경로 (컨테이너 내부 경로!)
    }

    # 에러 페이지 설정 같은 것도 여기 추가할 수 있어!
    # error_page 500 502 503 504 /50x.html;
    # location = /50x.html {
    #     root /usr/share/nginx/html;
    # }
}

# ✨ 443번 포트 (HTTPS) 설정 추가! ✨
server {
    listen 443 ssl; # 443번 포트로 HTTPS 요청을 받겠다!
    server_name www.textneckhub.p-e.kr textneckhub.p-e.kr; # www 없는 도메인도 추가!

    # ✨ 발급받은 인증서 파일 경로 지정! ✨
    # Certbot이 알려준 그 경로를 컨테이너 내부 경로로 써야 해!
    ssl_certificate /etc/letsencrypt/live/www.textneckhub.p-e.kr/fullchain.pem; # 전체 인증서 체인 파일
    ssl_certificate_key /etc/letsencrypt/live/www.textneckhub.p-e.kr/privkey.pem; # 개인 키 파일

    # ✨ SSL 관련 추가 설정 (보안 강화를 위해 추천!) ✨
    ssl_protocols TLSv1.2 TLSv1.3; # 최신 TLS 버전 사용
    ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384"; # 안전한 암호화 방식만 사용
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s; # DNS resolver 설정 (구글 DNS 예시)
    resolver_timeout 5s;

    # ✨ HSTS (HTTP Strict Transport Security) 설정 (보안 강화!) ✨
    # 브라우저에게 앞으로 이 사이트는 무조건 HTTPS로만 접속하라고 알려주는 거야!
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";

    # 웹 서비스 파일 경로 등 다른 설정들...
    location / {
        # 여기는 443번 포트로 들어온 요청의 기본 경로('/')를 어떻게 처리할지 정하는 곳이야
        root /usr/share/nginx/html; # 네 웹 파일이 있는 경로 (컨테이너 내부 경로!)
        index index.html index.htm;
        try_files $uri $uri/ =404;
        # 만약 백엔드 서버로 프록시한다면 여기에 proxy_pass 설정을 넣으면 돼!
        # proxy_pass http://[백엔드 서버 주소]:[백엔드 서버 포트];
        # proxy_set_header Host $host;
        # proxy_set_header X-Real-IP $remote_addr;
        # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # proxy_set_header X-Forwarded-Proto $scheme;
    }

    # 다른 location 블록들 (예: /api 경로는 백엔드로 넘기기 등)
    # location /api/ {
    #     proxy_pass http://[API 서버 주소]:[API 서버 포트];
    #     # ... 다른 프록시 설정들 ...
    # }
}
