
server {
    listen 80;
    server_name api.textneckhub.p-e.kr;

    
    location ~ /.well-known/acme-challenge/ {
        allow all;
        root /var/www/certbot;
    }

    
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name api.textneckhub.p-e.kr;

    
    ssl_certificate     /etc/letsencrypt/live/api.textneckhub.p-e.kr/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.textneckhub.p-e.kr/privkey.pem;

    
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_ciphers         "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";
    ssl_prefer_server_ciphers off;
    ssl_session_cache   shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    ssl_stapling        on;
    ssl_stapling_verify on;
    resolver            127.0.0.11 valid=30s;
    resolver_timeout    5s;

    
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

   
       
    location /static/auth/ {
        alias /var/www/static/auth/; 
        expires 30d;
        add_header Cache-Control "public, no-transform";
    }

    
    location /static/board/ {
        alias /var/www/static/board/; 
        expires 30d;
        add_header Cache-Control "public, no-transform";
    }

    
    location /media/auth/ {
        alias /var/www/media/auth/; 
        expires 30d;
        add_header Cache-Control "public, no-transform";
    }

    
    location /media/board/ {
        alias /var/www/media/board/;
        expires 30d;
        add_header Cache-Control "public, no-transform";
    }

    location /core/v1/ws/ {
        proxy_pass http://core:8000/core/v1/ws/;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_read_timeout 86400s;
    }

    location /auth/ {
        proxy_pass         http://auth:8000/auth/;
        proxy_set_header   Host              $host;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
    }

 
    location /board/ {
        proxy_pass http://board:8000/board/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /core/ {
        proxy_pass http://core:8000/core/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location / {
        return 404;
    }
}
