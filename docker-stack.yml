version: "3.8"

services:
  nginx: # Nginx 서비스 추가!
    image: nginx:alpine
    ports:
      - "80:80" # 외부 80 포트를 Nginx 80 포트로 연결해줄 거야!
    # volumes:
    #   - ./nginx.conf:/etc/nginx/nginx.conf # 네 로컬에 있는 nginx.conf 파일을 컨테이너 안으로 넣어줄 거야
    depends_on:
      - frontend # frontend 서비스가 먼저 준비되도록 기다려줄게!

  frontend:
    build:
      context: ./Frontend
      dockerfile: Dockerfile.prod
    image: textneckhub-frontend:v1.0.0
    # ports: # 이제 Nginx가 앞에서 처리할 거니까, 여기서 외부 포트 매핑은 빼는 게 좋아!
    #   - "90:80"
    environment:
      - VITE_API_URL=https://api.textneckhub.o-r.kr

  auth:
    build:
      context: ./Auth
      dockerfile: Dockerfile.prod
    image: textneckhub-auth:v1.0.0
    depends_on:
      - postgres
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/postgres
      - DJANGO_SETTINGS_MODULE=config.settings.production

  board:
    build:
      context: ./Board
      dockerfile: Dockerfile.prod
    image: textneckhub-board:v1.0.0
    depends_on:
      - postgres
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/postgres
      - DJANGO_SETTINGS_MODULE=config.settings.production

  messenger:
    build:
      context: ./Messenger
      dockerfile: Dockerfile.prod
    image: textneckhub-messenger:v1.0.0
    depends_on:
      - mongodb
    environment:
      - MONGODB_URL=mongodb://mongodb:27027/
      - ENV=production

  core:
    build:
      context: ./Core
      dockerfile: Dockerfile.prod
    image: textneckhub-core:v1.0.0
    depends_on:
      - redis
    environment:
      - REDIS_URL=redis://redis:6389/0
      - ENV=production

  postgres:
    image: postgres:15
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5442:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  mongodb:
    image: mongo:7
    ports:
      - "27027:27017"
    volumes:
      - mongodata:/data/db

  redis:
    image: redis:7
    ports:
      - "6389:6379"
    volumes:
      - redisdata:/data

volumes:
  pgdata:
  mongodata:
  redisdata:
