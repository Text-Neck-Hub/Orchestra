.PHONY: stop deploy build_auth build_board build_messenger build_core build_all

ENV_FILE := ./.env

stop:
	docker stack rm textneckhub

deploy:
	# üö®üö®üö® 'source' ÎåÄÏã† '.' (Ï†ê) Î™ÖÎ†πÏñ¥Î°ú ÍµêÏ≤¥! üö®üö®üö®
	# Í∑∏Î¶¨Í≥† .env ÌååÏùºÏù¥ ÏóÜÏúºÎ©¥ Í≤ΩÍ≥†Î•º ÎùÑÏö∞Í≥† Í≥ÑÏÜç ÏßÑÌñâÌï©ÎãàÎã§.
	-@test -f $(ENV_FILE) && . $(ENV_FILE) || echo "Warning: $(ENV_FILE) not found."
	docker stack deploy -c docker-stack.yml textneckhub

# üö®üö®üö® build_auth ÌÉÄÍ≤ü ÏàòÏ†ï! üö®üö®üö®
build_auth:
	# üö®üö®üö® 'source' ÎåÄÏã† '.' (Ï†ê) Î™ÖÎ†πÏñ¥Î°ú ÍµêÏ≤¥! üö®üö®üö®
	-@test -f $(ENV_FILE) && . $(ENV_FILE) || echo "Warning: $(ENV_FILE) not found."
	docker build \
	  -f Auth/Dockerfile.prod \
	  -t textneckhub-auth:v1.0.0 \
	  --build-arg DJANGO_SETTINGS_MODULE=config.settings.production \
	  --build-arg SECRET_KEY="${DJANGO_SECRET_KEY}" \
	  --build-arg DATABASE_URL="postgresql://$(AUTH_DB_USER):$(AUTH_DB_PASSWORD)@postgres-auth:5432/$(AUTH_DB_NAME)" \
	  --build-arg JWT_ACCESS_TOKEN_LIFETIME_MINUTES="${JWT_ACCESS_TOKEN_LIFETIME_MINUTES}" \
	  --build-arg JWT_REFRESH_TOKEN_LIFETIME_DAYS="${JWT_REFRESH_TOKEN_LIFETIME_DAYS}" \
	  --build-arg JWT_ROTATE_REFRESH_TOKENS="${JWT_ROTATE_REFRESH_TOKENS}" \
	  --build-arg JWT_BLACKLIST_AFTER_ROTATION="${JWT_BLACKLIST_AFTER_ROTATION}" \
	  --build-arg JWT_ALGORITHM="${JWT_ALGORITHM}" \
	  --build-arg JWT_USER_ID_CLAIM="${JWT_USER_ID_CLAIM}" \
	  --build-arg JWT_JTI_CLAIM="${JWT_JTI_CLAIM}" \
	  --build-arg JWT_AUDIENCE="${JWT_AUDIENCE}" \
	  --build-arg JWT_ISSUER="${JWT_ISSUER}" \
	  --build-arg JWT_SLIDING_TOKEN_LIFETIME_MINUTES="${JWT_SLIDING_TOKEN_LIFETIME_MINUTES}" \
	  --build-arg JWT_SLIDING_TOKEN_REFRESH_LIFETIME_DAYS="${JWT_SLIDING_TOKEN_REFRESH_LIFETIME_DAYS}" \
	  Auth/

# üö®üö®üö® build_board, build_messenger, build_core ÌÉÄÍ≤üÎèÑ Ïú†ÏÇ¨ÌïòÍ≤å ÏàòÏ†ïÌï¥Ïïº Ìï©ÎãàÎã§! üö®üö®üö®
# (Í∞Å ÏÑúÎπÑÏä§Ïùò DATABASE_URL Ï°∞Ìï©ÏùÄ Ìï¥Îãπ ÏÑúÎπÑÏä§Ïóê ÎßûÍ≤å Î≥ÄÍ≤Ω)
build_board:
	-@test -f $(ENV_FILE) && . $(ENV_FILE) || echo "Warning: $(ENV_FILE) not found."
	docker build \
	  -f Board/Dockerfile.prod \
	  -t textneckhub-board:v1.0.0 \
	  --build-arg DJANGO_SETTINGS_MODULE=config.settings.production \
	  --build-arg SECRET_KEY="${DJANGO_SECRET_KEY}" \
	  --build-arg DATABASE_URL="postgresql://$(BOARD_DB_USER):$(BOARD_DB_PASSWORD)@postgres-board:5432/$(BOARD_DB_NAME)" \
	  --build-arg JWT_ACCESS_TOKEN_LIFETIME_MINUTES="${JWT_ACCESS_TOKEN_LIFETIME_MINUTES}" \
	  --build-arg JWT_REFRESH_TOKEN_LIFETIME_DAYS="${JWT_REFRESH_TOKEN_LIFETIME_DAYS}" \
	  --build-arg JWT_ROTATE_REFRESH_TOKENS="${JWT_ROTATE_REFRESH_TOKENS}" \
	  --build-arg JWT_BLACKLIST_AFTER_ROTATION="${JWT_BLACKLIST_AFTER_ROTATION}" \
	  --build-arg JWT_ALGORITHM="${JWT_ALGORITHM}" \
	  --build-arg JWT_USER_ID_CLAIM="${JWT_USER_ID_CLAIM}" \
	  --build-arg JWT_JTI_CLAIM="${JWT_JTI_CLAIM}" \
	  --build-arg JWT_AUDIENCE="${JWT_AUDIENCE}" \
	  --build-arg JWT_ISSUER="${JWT_ISSUER}" \
	  --build-arg JWT_SLIDING_TOKEN_LIFETIME_MINUTES="${JWT_SLIDING_TOKEN_LIFETIME_MINUTES}" \
	  --build-arg JWT_SLIDING_TOKEN_REFRESH_LIFETIME_DAYS="${JWT_SLIDING_TOKEN_REFRESH_LIFETIME_DAYS}" \
	  Board/

build_messenger:
	-@test -f $(ENV_FILE) && . $(ENV_FILE) || echo "Warning: $(ENV_FILE) not found."
	docker build \
	  -f Messenger/Dockerfile.prod \
	  -t textneckhub-messenger:v1.0.0 \
	  --build-arg DJANGO_SETTINGS_MODULE=config.settings.production \
	  --build-arg SECRET_KEY="${DJANGO_SECRET_KEY}" \
	  --build-arg DATABASE_URL="postgresql://$(MESSENGER_DB_USER):$(MESSENGER_DB_PASSWORD)@postgres-messenger:5432/$(MESSENGER_DB_NAME)" \
	  --build-arg JWT_ACCESS_TOKEN_LIFETIME_MINUTES="${JWT_ACCESS_TOKEN_LIFETIME_MINUTES}" \
	  --build-arg JWT_REFRESH_TOKEN_LIFETIME_DAYS="${JWT_REFRESH_TOKEN_LIFETIME_DAYS}" \
	  --build-arg JWT_ROTATE_REFRESH_TOKENS="${JWT_ROTATE_REFRESH_TOKENS}" \
	  --build-arg JWT_BLACKLIST_AFTER_ROTATION="${JWT_BLACKLIST_AFTER_ROTATION}" \
	  --build-arg JWT_ALGORITHM="${JWT_ALGORITHM}" \
	  --build-arg JWT_USER_ID_CLAIM="${JWT_USER_ID_CLAIM}" \
	  --build-arg JWT_JTI_CLAIM="${JWT_JTI_CLAIM}" \
	  --build-arg JWT_AUDIENCE="${JWT_AUDIENCE}" \
	  --build-arg JWT_ISSUER="${JWT_ISSUER}" \
	  --build-arg JWT_SLIDING_TOKEN_LIFETIME_MINUTES="${JWT_SLIDING_TOKEN_LIFETIME_MINUTES}" \
	  --build-arg JWT_SLIDING_TOKEN_REFRESH_LIFETIME_DAYS="${JWT_SLIDING_TOKEN_REFRESH_LIFETIME_DAYS}" \
	  Messenger/

build_core:
	-@test -f $(ENV_FILE) && . $(ENV_FILE) || echo "Warning: $(ENV_FILE) not found."
	docker build \
	  -f Core/Dockerfile.prod \
	  -t textneckhub-core:v1.0.0 \
	  --build-arg DJANGO_SETTINGS_MODULE=config.settings.production \
	  --build-arg SECRET_KEY="${DJANGO_SECRET_KEY}" \
	  --build-arg DATABASE_URL="postgresql://$(CORE_DB_USER):$(CORE_DB_PASSWORD)@postgres-core:5432/$(CORE_DB_NAME)" \
	  --build-arg JWT_ACCESS_TOKEN_LIFETIME_MINUTES="${JWT_ACCESS_TOKEN_LIFETIME_MINUTES}" \
	  --build-arg JWT_REFRESH_TOKEN_LIFETIME_DAYS="${JWT_REFRESH_TOKEN_LIFETIME_DAYS}" \
	  --build-arg JWT_ROTATE_REFRESH_TOKENS="${JWT_ROTATE_REFRESH_TOKENS}" \
	  --build-arg JWT_BLACKLIST_AFTER_ROTATION="${JWT_BLACKLIST_AFTER_ROTATION}" \
	  --build-arg JWT_ALGORITHM="${JWT_ALGORITHM}" \
	  --build-arg JWT_USER_ID_CLAIM="${JWT_USER_ID_CLAIM}" \
	  --build-arg JWT_JTI_CLAIM="${JWT_JTI_CLAIM}" \
	  --build-arg JWT_AUDIENCE="${JWT_AUDIENCE}" \
	  --build-arg JWT_ISSUER="${JWT_ISSUER}" \
	  --build-arg JWT_SLIDING_TOKEN_LIFETIME_MINUTES="${JWT_SLIDING_TOKEN_LIFETIME_MINUTES}" \
	  --build-arg JWT_SLIDING_TOKEN_REFRESH_LIFETIME_DAYS="${JWT_SLIDING_TOKEN_REFRESH_LIFETIME_DAYS}" \
	  Core/

build_all: build_auth build_board build_messenger build_core
	@echo "All service images built successfully! üéâ"