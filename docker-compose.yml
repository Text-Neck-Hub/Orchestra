
version: '3.8'

services:
 
  nginx:

    image: textneckhub-nginx:v1.0.0
    build:
      context: ./Nginx 
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Nginx/app/certbot-www:/var/www/certbot:z
      - ./Nginx/app/certbot-etc:/etc/letsencrypt:z
      - ./Nginx/app/nginx/nginx.conf:/etc/nginx/nginx.conf:z
      - ./Nginx/app/nginx/conf.d/:/etc/nginx/conf.d/:z
      - ./Frontend/app/dist:/usr/share/nginx/html:ro
      - static_data:/var/www/static/:ro
      - media_data:/var/www/media/:ro

    depends_on:
      - auth
      - board

  auth:
    build:
      context: ./Auth
      dockerfile: Dockerfile.prod
      args:
        BUILD_VERSION: ${BUILD_VERSION_AUTH:-auth-default-build}
        DATABASE_URL: ${AUTH_DATABASE_URL:-postgresql://auth_user:auth_password@postgres-auth:5432/textneckhub_auth_db}
        DJANGO_SETTINGS_MODULE: ${DJANGO_SETTINGS_MODULE:-config.settings.production}
        ALLOWED_HOSTS: ${ALLOWED_HOSTS:-www.textneckhub.p-e.kr,api.textneckhub.p-e.kr,localhost}
        SECRET_KEY: ${SECRET_KEY:-your_very_long_and_random_secret_key_for_jwt_and_django}
        JWT_ACCESS_TOKEN_LIFETIME_MINUTES: ${JWT_ACCESS_TOKEN_LIFETIME_MINUTES:-5}
        JWT_REFRESH_TOKEN_LIFETIME_DAYS: ${JWT_REFRESH_TOKEN_LIFETIME_DAYS:-1}
        JWT_ROTATE_REFRESH_TOKENS: ${JWT_ROTATE_REFRESH_TOKENS:-True}
        JWT_BLACKLIST_AFTER_ROTATION: ${JWT_BLACKLIST_AFTER_ROTATION:-True}
        JWT_ALGORITHM: ${JWT_ALGORITHM:-HS256}
        JWT_USER_ID_CLAIM: ${JWT_USER_ID_CLAIM:-user_id}
        JWT_JTI_CLAIM: ${JWT_JTI_CLAIM:-jti}
        JWT_AUDIENCE: ${JWT_AUDIENCE:-}
        JWT_ISSUER: ${JWT_ISSUER:-}
        JWT_SLIDING_TOKEN_LIFETIME_MINUTES: ${JWT_SLIDING_TOKEN_LIFETIME_MINUTES:-5}
        JWT_SLIDING_TOKEN_REFRESH_LIFETIME_DAYS: ${JWT_SLIDING_TOKEN_REFRESH_LIFETIME_DAYS:-1}
        REDIS_HOST: ${REDIS_HOST:-redis}
    image: textneckhub-auth:v1.0.0
    depends_on:
      - postgres-auth
      - redis
      - rabbitmq 
    environment: {} 
    volumes:
      - ./Auth/app:/app
      - static_data:/app/collected_static_auth/:rw
      - media_data:/app/uploaded_media_auth/:rw


  board:
    build:
      context: ./Board
      dockerfile: Dockerfile.prod
      args:
        BUILD_VERSION: ${BUILD_VERSION_BOARD:-board-default-build}
        DATABASE_URL: ${BOARD_DATABASE_URL:-postgresql://board_user:board_password@postgres-board:5432/textneckhub_board_db}
        DJANGO_SETTINGS_MODULE: ${DJANGO_SETTINGS_MODULE:-config.settings.production}
        ALLOWED_HOSTS: ${ALLOWED_HOSTS:-www.textneckhub.p-e.kr,api.textneckhub.p-e.kr,localhost}
        SECRET_KEY: ${SECRET_KEY:-your_very_long_and_random_secret_key_for_jwt_and_django}
        JWT_ACCESS_TOKEN_LIFETIME_MINUTES: ${JWT_ACCESS_TOKEN_LIFETIME_MINUTES:-5}
        JWT_REFRESH_TOKEN_LIFETIME_DAYS: ${JWT_REFRESH_TOKEN_LIFETIME_DAYS:-1}
        JWT_ROTATE_REFRESH_TOKENS: ${JWT_ROTATE_REFRESH_TOKENS:-True}
        JWT_BLACKLIST_AFTER_ROTATION: ${JWT_BLACKLIST_AFTER_ROTATION:-True}
        JWT_ALGORITHM: ${JWT_ALGORITHM:-HS256}
        JWT_USER_ID_CLAIM: ${JWT_USER_ID_CLAIM:-user_id}
        JWT_JTI_CLAIM: ${JWT_JTI_CLAIM:-jti}
        JWT_AUDIENCE: ${JWT_AUDIENCE:-}
        JWT_ISSUER: ${JWT_ISSUER:-}
        JWT_SLIDING_TOKEN_LIFETIME_MINUTES: ${JWT_SLIDING_TOKEN_LIFETIME_MINUTES:-5}
        JWT_SLIDING_TOKEN_REFRESH_LIFETIME_DAYS: ${JWT_SLIDING_TOKEN_REFRESH_LIFETIME_DAYS:-1}
        CELERY_BROKER_URL: ${CELERY_BROKER_URL:-amqp://guest:guest@rabbitmq:5672//}
        REDIS_HOST: ${REDIS_HOST:-redis}
    image: textneckhub-board:v1.0.0
    depends_on:
      - postgres-board
      - redis
      - rabbitmq
    volumes:
      - ./Board/app:/app 
      - static_data:/app/collected_static_board/:rw
      - media_data:/app/uploaded_media_board/:rw


  postgres-auth:

    image: textneckhub-postgres-auth:v1.0.0
    build:
      context: ./Database 
      dockerfile: Dockerfile 
    environment:
      - POSTGRES_USER=${AUTH_DB_USER:-auth_user}
      - POSTGRES_PASSWORD=${AUTH_DB_PASSWORD:-auth_password}
      - POSTGRES_DB=${AUTH_DB_NAME:-textneckhub_auth_db}
    volumes:
      - postgres_auth_data:/var/lib/postgresql/data
      - ./Database/auth-init-db:/docker-entrypoint-initdb.d

  postgres-board:
    image: textneckhub-postgres-board:v1.0.0
    build:
      context: ./Database 
      dockerfile: Dockerfile 
    environment:
      - POSTGRES_USER=${BOARD_DB_USER:-board_user}
      - POSTGRES_PASSWORD=${BOARD_DB_PASSWORD:-board_password}
      - POSTGRES_DB=${BOARD_DB_NAME:-textneckhub_board_db}
    volumes:
      - postgres_board_data:/var/lib/postgresql/data
      - ./Database/board-init-db:/docker-entrypoint-initdb.d

  redis:
    image: textneckhub-redis:v1.0.0 
    build:
      context: ./Redis 
      dockerfile: Dockerfile 
    volumes:
      - redis_data:/data

  rabbitmq:
    image: textneckhub-rabbitmq:v1.0.0
    build:
      context: ./RabbitMQ
      dockerfile: Dockerfile
    ports:
      - "5672:5672" 
      - "15672:15672" 

volumes:
  postgres_auth_data:
  postgres_board_data:
  static_data:
  media_data:
  redis_data:


networks:
  default:
    external: true
    name: shared-net